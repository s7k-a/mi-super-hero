// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä –∏–∑ Telegram
const userPhone = Telegram.WebApp.initDataUnsafe.user?.phone_number;

// 2. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
async function checkAuth() {
  try {
    const response = await fetch('test-data.json');
    const employees = await response.json();
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–æ–º–µ—Ä–∞ (—É–±–∏—Ä–∞–µ–º +, –ø—Ä–æ–±–µ–ª—ã)
    const cleanUserPhone = userPhone?.replace(/\D/g, '');
    const foundEmployee = employees.find(e => 
      e.phone.replace(/\D/g, '') === cleanUserPhone
    );

    if (foundEmployee) {
      // –ù–æ–º–µ—Ä –µ—Å—Ç—å –≤ –±–∞–∑–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      showProfile(foundEmployee);
    } else if (userPhone) {
      // –ù–æ–º–µ—Ä –ø–µ—Ä–µ–¥–∞–Ω, –Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω
      showMessage("üö´ –í–∞—à –Ω–æ–º–µ—Ä –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω");
    } else {
      // –ù–æ–º–µ—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω (–æ—Ç–∫—Ä—ã–ª–∏ –Ω–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞)
      showLoginForm(); 
    }
  } catch (error) {
    showMessage("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
  }
}

// 3. –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –¥–ª—è "—Ä—É—á–Ω–æ–≥–æ" –≤–≤–æ–¥–∞
function showLoginForm() {
  document.getElementById('app').innerHTML = `
    <div class="auth-form">
      <h2>–í—Ö–æ–¥ –ø–æ –ª–æ–≥–∏–Ω—É/–ø–∞—Ä–æ–ª—é</h2>
      <input type="text" id="login" placeholder="–õ–æ–≥–∏–Ω">
      <input type="password" id="password" placeholder="–ü–∞—Ä–æ–ª—å">
      <button onclick="manualAuth()">–í–æ–π—Ç–∏</button>
    </div>
  `;
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
async function manualAuth() {
  const login = document.getElementById('login').value;
  const password = document.getElementById('password').value;
  
  const response = await fetch('test-data.json');
  const employees = await response.json();
  const employee = employees.find(e => e.login === login && e.password === password);
  
  employee ? showProfile(employee) : showMessage("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ");
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkAuth();